networks: (( merge ))

meta:
  environment: ~

  release:
    name: nats-stress

  networks:
    z1:
      apps: nats1

    z2:
      apps: nats2

  nats_templates:
  - name: nats
    release: (( meta.release.name ))
  - name: panel
    release: (( meta.release.name ))

  ruby_client_templates:
  - name: ruby_client
    release: (( meta.release.name ))
  - name: metrics
    release: (( meta.release.name ))
  - name: panel
    release: (( meta.release.name ))

  yagnats_og_client_templates:
  - name: yagnats_og_client
    release: (( meta.release.name ))
  - name: metrics
    release: (( meta.release.name ))
  - name: panel
    release: (( meta.release.name ))

  yagnats_apcera_client_templates:
  - name: yagnats_apcera_client
    release: (( meta.release.name ))
  - name: metrics
    release: (( meta.release.name ))
  - name: panel
    release: (( meta.release.name ))

jobs:
  - name: nats_z1
    templates: (( merge || meta.nats_templates ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: nats1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))

  - name: nats_z2
    templates: (( merge || meta.nats_templates ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: nats2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))

  - name: ruby_client_z1
    templates: (( merge || meta.ruby_client_templates ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: nats1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))
      nats:
        machines: (( .properties.nats.z1_machines ))

  - name: ruby_client_z2
    templates: (( merge || meta.ruby_client_templates ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: nats2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))
      nats:
        machines: (( .properties.nats.z2_machines ))

  - name: yagnats_og_client_z1
    templates: (( merge || meta.yagnats_og_client_templates ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: nats1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))
      nats:
        machines:
        machines: (( .properties.nats.z1_machines ))

  - name: yagnats_og_client_z2
    templates: (( merge || meta.yagnats_og_client_templates ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: nats2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))
      nats:
        machines: (( .properties.nats.z2_machines ))

  - name: yagnats_apcera_client_z1
    templates: (( merge || meta.yagnats_apcera_client_templates ))
    instances: 1
    resource_pool: medium_z1
    networks:
      - name: nats1
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z1 ))
      nats:
        machines: (( .properties.nats.z1_machines ))

  - name: yagnats_apcera_client_z2
    templates: (( merge || meta.yagnats_apcera_client_templates ))
    instances: 1
    resource_pool: medium_z2
    networks:
      - name: nats2
        static_ips: (( merge ))
    properties:
      networks: (( meta.networks.z2 ))
      nats:
        machines: (( .properties.nats.z2_machines ))

properties:
  population: 12
  datadog_api_key: ~
  publish_interval_in_seconds: 0.05
  payload_size_in_bytes: 300
  nats:
    user: (( merge ))
    password: (( merge ))
    address: (( jobs.nats_z1.networks.nats1.static_ips.[0] ))
    port: 4222
    machines: (( jobs.nats_z1.networks.nats1.static_ips jobs.nats_z2.networks.nats2.static_ips ))
    debug: false
    trace: false
    monitor_port: 0
    prof_port: 0
    z1_machines: (( jobs.nats_z1.networks.nats1.static_ips jobs.nats_z2.networks.nats2.static_ips ))
    z2_machines: (( jobs.nats_z2.networks.nats2.static_ips jobs.nats_z1.networks.nats1.static_ips ))
